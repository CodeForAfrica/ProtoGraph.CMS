<%= stylesheet_link_tag "ProtoGraph.Container.toCardForm" %>
<%= stylesheet_link_tag "JCrop.css" %>

<style type="text/css">
  .protograph-imagebank-button {
    float: right;
    /*display: none;*/
  }
  .protograph-new-image {
    display: none;
  }
</style>
<a class="protograph-imagebank-button" data-toggle="modal" data-target="#fileUploadModal" href="#">Image Bank</a>
<div id="root"></div>
<%= javascript_include_tag "JCrop.js" %>
<script type="text/javascript">
    window.accessToken = "<%= current_user. access_token %>";
    window.baseURL = "<%= BASE_URL %>/api/v1";
    window.accountSlug = "<%= @account.slug %>";
    window.folderSlug = "<%= @folder.slug %>";
    var JCropInstance;
</script>

<div class="modal fade" id="fileUploadModal" data-backdrop="static" data-keyboard="false">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Add a new image</h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <%= simple_form_for([@account, @new_image],html: {"data-remote" => "true"}) do |f| %>
          <%= f.error_notification %>
          <%= f.input :image, as: :file, required: true, hint: 'Size should less than or equal to 500kB. Supported file types are GIF, JPEG, JPG and PNG', input_html: {onChange: "readURL(this)"} %>
          <div id="image_container" class="protograph-new-image">
            <nav class="navbar navbar-expand-lg navbar-light bg-light" id="aspectRatioMenu">
              <a class="navbar-brand" href="#">Quick crop:</a>
              <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                  <li class="nav-item item active" data-width="0" data-height="0">
                    <a class="nav-link" href='#'>
                      Free selection
                    </a>
                  </li>
                  <li class="nav-item item" data-width="2" data-height="3">
                    <a class="nav-link" href='#'>
                      2:3 (Quiz Cover Image)
                    </a>
                  </li>
                  <li class="nav-item item" data-width="2" data-height="1">
                    <a class="nav-link" href='#'>
                      2:1 (Quiz Answer Image)
                    </a>
                  </li>
                  <li class="nav-item item" data-width="1" data-height="1">
                    <a class="nav-link" href='#'>
                      1:1 (Timeline Event Image)
                    </a>
                  </li>
                </ul>
              </div>
            </nav>
            <img class="ui centered image" id="cropbox" src="#" style='max-height: 350px' />
          </div>
          <%= f.input :account_id, as: :hidden, input_html: {value: @account.id} %>
          <%= f.input :name, required: true %>
          <%#= f.input :tag_list, collection: [], label: 'Tags', hint: "Enter a comma separated list of tags.", input_html: { id: 'tags_autocomplete', class: 'ui fluid search dropdown', multiple: true, "data-content"=>"This field is required." }, wrapper_html: { class: 'required'} %>
          <%= f.input :description %>
          <% %w[x y w h].each do |attribute| %>
              <%= f.input "crop_#{attribute}", as: :hidden %>
          <% end %>
        <% end %>
      </div>
      <div class='modal-footer'>
        <input type="submit" value="Upload" form="new_image" class="btn btn-outline" id="new_image_submit_button">
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
  function readURL(input) {
    if (input.files && input.files[0]) {
      var reader = new FileReader();
      reader.onload = function (e) {
        if (JCropInstance) {
          JCropInstance.destroy();
        }
        $("#cropbox").attr('src', e.target.result);
        $(".protograph-new-image").css('display', 'block');
        $('#image_name').val(input.files[0].name.replace(/\.[^/.]+$/, ""));
        JCropInstance = $('#cropbox').Jcrop({
          setSelect: [0, 0, 420, 420],
          onSelect: update,
          onChange: update,
          boxHeight: 350,
          boxWidth: 500,
          aspectRatio: ($('#aspectRatioMenu li.item.active').data().width / $('#aspectRatioMenu li.item.active').data().height)
        }, function(){ JCropInstance = this});
      }
      reader.readAsDataURL(input.files[0]);
    } else {
      $("#cropbox").attr('src', "");
      $('#image_name').val("");
    }
  };

  var gcd = function(a, b) {
    if ( ! b) {
      return a;
    }
    return gcd(b, a % b);
  };

  function update(coords) {
    if (!$('.jcrop-holder .protograph-crop-tooltip').length) {
      $('.jcrop-holder').append('<div class="protograph-crop-tooltip"></div>');
    }

    $('#image_crop_x').val(coords.x);
    $('#image_crop_y').val(coords.y);
    $('#image_crop_w').val(coords.w);
    $('#image_crop_h').val(coords.h);

    var str = "",
      width = Math.round(coords.w),
      height = Math.round(coords.h),
      aspectWidth = width / gcd(width, height),
      aspectHeight = height / gcd(width, height);

    if (coords.w > 0 && coords.h > 0) {
      str += (width + ' x ' + height);
      str += "  ";
      str += ('(' + Math.round(aspectWidth) + ':' + Math.round(aspectHeight) + ')');
    } else {
      str += ( width + ' x ' + height);
    }

    $('.protograph-crop-tooltip').html(str);
  };

  $(document).ready(function () {
    $('#aspectRatioMenu li.item').on('click', function (e) {
      if ($(this).attr("disabled") === "disabled"){
        return false;
      }
      var ref = $(this),
        data,
        aspectRatio;

      ref
        .addClass('active')
        .siblings('.item')
          .removeClass('active');

      data = ref.data();
      if (data.height > 0 && data.width > 0) {
        aspectRatio = data.width / data.height;
      } else {
        aspectRatio = 0;
      }

      JCropInstance = $('#cropbox').Jcrop({
        setSelect: [0, 0, 420, 420],
        onSelect: update,
        onChange: update,
        boxHeight: 350,
        boxWidth: 500,
        aspectRatio: aspectRatio
      },function(){ JCropInstance = this});

      e.preventDefault();
    });

    $("#new_image").on('ajax:success', function (e, data, status, xhr) {
      alert('success', event.detail[0]);
      console.log(e, data, status, xhr, ";;;;;;;;;;;;;;;;;;;;;");
      debugger;
    }).on('ajax:error', function (e, xhr, status, error) {
      alert('error');
      console.log(e, xhr, status, error, "+++++++++++++++++++++");
    });

  });

</script>

<%= javascript_include_tag "ProtoGraph.Container.toCardForm" %>
