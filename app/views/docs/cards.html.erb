<div class="ui sixteen column grid">
    <div class="sixteen wide column">
        <div class="ui breadcrumb">
          <%= link_to "Docs", docs_path, class: "section" %>
          <div class="divider"> / </div>
          <div class="section">Card</div>
        </div>
        <h1 class="ui header" style="margin-top: 10px;">
            Basics
        </h1>
        <div class="ui divider"></div>
        <p>A card is a self-contained, front-end only app that does one thing and does it well. A card contains:</p>
        <ul>
            <li>Data</li>
            <li>Look and feel</li>
            <li>Actions and Logic</li>
            <li>Services</li>
            <li>Shopping Information</li>
        </ul>
        <h3 class="ui header">A card holds <u>data</u></h3>
        <p>Each card has content for the reader.</p>
        <ul>
            <li><u>Context</u>: Help the reader decide if the card is relevant right now. Should the reader read it or skim through it?</li>
            <li><u>Content</u>: A gist (concentrated summary) of what the reader needs to see right now and nothing more.</li>
        </ul>
        <p>A card also acts as an API. A webpage where the card is embedded can access the data behind the card by calling the getData service. Each card also has a <a href="http://json-schema.org/" target="_blank">schema</a> so journalists can consistently create cards.</p>
        <h3 class="ui header">A card holds <u>look and feel</u></h3>
        <p>Each card has itâ€™s own look and feel that is UI and UX. Each card must expose unique look and feel for five views:</p>
        <ul>
            <li><u>renderLaptop</u>: How does the card look on laptops?</li>
            <li><u>renderMobile</u>: How does the card look on mobile phones?</li>
            <li><u>renderEdit</u>: A WYSIWYG form to create the card.</li>
            <li><u>renderScreenshot</u>: A 1:1 aspect ratio version of the card that would be converted into image for listing.</li>
            <li><u>renderSEO</u>: A HTML-only version of the card that will be given to Google Bot for scrapping for SEO.</li>
        </ul>
        <h3 class="ui header">A card holds <u>actions and logic</u></h3>
        <p>A card must expose buttons and links that allows readers to act upon the information presented in the card. Examples of actions include play a video, share the card, answer a quiz question, etc. All actions are listed, packaged and prioritised so that only the primary ones are exposed.</p>
        <h3 class="ui header">A card exposes <u>services</u></h3>
        <p>A card is embedded into a webpage or a container. The container talks to the card via run-time services that the card exposes. Examples of services include report actions to Google Analytics, responsively change look and feel to available space, etc.</p>
        <h3 class="ui header">A card must have <u>shopping information</u></h3>
        <p>A card should hold information like name of the card, elevator pitch, description, logo, etc. of the card so journalists can choose which cards are relevant to them.</p>
        <div class="ui divider"></div>
        <p>Microservices or APIs got the Internet to a stage where different websites can talk to teach other. Example one can tweet from a news site or you can log into Evernote with your Google ID. This happens because of APIs. However, each consumer of the API must build out their own user interface.</p>
        <p>With cards, the goal is to enable one-more level of reusability i.e. reuse look and feel along with data and logic by building on open WEB standards. Imagine each card as an app but one that is not tied to proprietary standards of iOS and Android.</p>
        <p><%= link_to "< Back to Docs", docs_path %> </p>
    </div>
</div>