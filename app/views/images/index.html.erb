<%= stylesheet_link_tag "justified.css" %>
<%= stylesheet_link_tag "select2.css" %>

<div class="row-fluid" style="background: #fafbfc; ">
  <div class="container" style="padding-left: 0px; padding-right: 0px;">
    <br/>
    <div class="row"  style="padding-left: 0px; padding-right: 0px;">
      <div class="col-10">
        <h1 style="margin-bottom: 20px; font-weight: 400; margin-top: 20px;">
          <%= link_to @account.username, @account, style: "font-weight: 200;" %> / Image Bank
        </h1>
      </div>
      <div class="col-2">
        <a id="openFileUpload" class='btn btn-outline' href='#' data-toggle='modal' data-target='#fileUploadModal'>Upload image</a>
      </div>
    </div>
  </div>
</div>
<br/>
<br/>

<div class="row">
  <div class="container">
      <% if @images.first.present? %>
        <div id="imageContainer" class="col-sm-12"></div>
    <% else %>
        <div class="blankslate blankslate-spacious">
            <h3>No images uploaded yet.</h3>
            <p>Use the [+ Upload image] button on the top right.</p>
        </div>
    <% end %>
  </div>

  <div class="modal" id="fileUploadModal">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h4 class="modal-title">Add a new image</h4>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <%= simple_form_for([@account, @image]) do |f| %>
            <%= f.error_notification %>
            <%= f.input :image, as: :file, required: true, hint: 'Size should less than or equal to 500kB. Supported file types are GIF, JPEG, JPG and PNG' %>
            <%= f.input :account_id, as: :hidden, input_html: {value: @account.id} %>
            <%= f.input :name, required: true %>
            <%#= f.input :tag_list, collection: [], label: 'Tags', hint: "Enter a comma separated list of tags.", input_html: { id: 'tags_autocomplete', class: 'ui fluid search dropdown', multiple: true, "data-content"=>"This field is required." }, wrapper_html: { class: 'required'} %>
            <%= f.input :description %>
          <% end %>
        </div>
        <div class='modal-footer'>
          <input type="submit" value="Upload" form="new_image" class="btn btn-outline">
        </div>
      </div>
    </div>
  </div>

<%= paginate @images %>
</div>
<%= javascript_include_tag "justified.js" %>
<%= javascript_include_tag "select2.js" %>
<script type="text/javascript">
  var images = <%= @images.as_json.to_json.html_safe %>;

  $(document).ready(function() {
    // var validation_rules = {
    //     on: 'blur',
    //     inline: true,
    //     fields: {
    //         'image[tag_list][]': {
    //             identifier: 'tags_autocomplete',
    //             rules: [{
    //                 type: 'empty',
    //                 prompt: 'This is a required field.'
    //             }]
    //         }
    //     }
    // };
    // $('#new_image').form(validation_rules);
    var maxHeight = 75;
    if (images.length) {
      $('#imageContainer').empty().justifiedImages({
        images: images,
        rowHeight: maxHeight,
        maxRowHeight: 75,
        thumbnailPath: function(photo, width, height) {
          return photo.thumbnail_url;
        },
        getSize: function(photo) {
          return { width: photo.thumbnail_width, height: photo.thumbnail_height };
        },
        template: function(data) {
          var image;
          image = '<div class="photo-container" style="height:' + data.displayHeight + 'px;margin-right:' + data.marginRight + 'px;">';
          image += '<a href="' + data.redirect_to + '" data-turbolinks="false">';
          image += '<img class="image-thumb" src="' + data.src + '" style="width:' + data.displayWidth + 'px;height:' + data.displayHeight + 'px;" >';
          image += '</a>';
          image += '   <div class="photograph-image-details" style="display: block;">' + data.image_width + ' x ' + data.image_height + ' (' + data.aspectWidth + ':' + data.aspectHeight + ') ' + '</div>';
          image += '</div>';

          return image;
        },
        margin: 20
      });
    }

  //   $('#tags_autocomplete').select2({
  //     ajax: {
  //     url: "/api/v1/tags",
  //     dataType: 'json',
  //     delay: 250,
  //     data: function (params) {
  //       return {
  //         q: params.term
  //       }
  //     },
  //     processResults: function (data, params) {
  //       // parse the results into the format expected by Select2
  //       // since we are using custom formatting functions we do not need to
  //       // alter the remote JSON data, except to indicate that infinite
  //       // scrolling can be used

  //       return {
  //         results: data.results
  //       };
  //     },
  //     cache: true
  //   },
  //   createTag: function (params) {
  //     return {
  //       id: params.term,
  //       text: params.term,
  //       newOption: true
  //     }
  //   },
  //   tags: true
  // });

    // $('#new_image .ui.dropdown')
    //   .dropdown({
    //     fullTextSearch: true,
    //     forceSelection: false,
    //     saveRemoteData: false,
    //     allowAdditions: true,
    //     apiSettings: {
    //       url: '/api/v1/tags?q={query}'
    //     },
    //     fields: {
    //       value: 'name',
    //       name: 'name',
    //       id: 'id'
    //     }
    //   });
  });
</script>